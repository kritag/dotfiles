DOTFILES="$HOME/.dotfiles"
source $DOTFILES/zsh/aliases
source $HOME/.env

PATH="${PATH}:$HOME/.local/bin:$HOME/bin:/home/linuxbrew/.linuxbrew/bin:${KREW_ROOT:-$HOME/.krew}/bin"; export PATH;

FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

autoload -Uz compinit
ZSH_COMPDUMP=${ZSH_COMPDUMP:-${ZDOTDIR:-~}/.zcompdump}

# cache .zcompdump for about a day
if [[ $ZSH_COMPDUMP(#qNmh-20) ]]; then
  compinit -C -d "$ZSH_COMPDUMP"
else
  compinit -i -d "$ZSH_COMPDUMP"; touch "$ZSH_COMPDUMP"
fi
{
  # compile .zcompdump
  if [[ -s "$ZSH_COMPDUMP" && (! -s "${ZSH_COMPDUMP}.zwc" || "$ZSH_COMPDUMP" -nt "${ZSH_COMPDUMP}.zwc") ]]; then
    zcompile "$ZSH_COMPDUMP"
  fi
} &!

# Set the name of the static .zsh plugins file antidote will generate.
zsh_plugins=${ZDOTDIR:-~}/.zsh_plugins.zsh

# Lazy-load antidote.
fpath+=(${ZDOTDIR:-~}/.dotfiles/zsh/antidote)
autoload -Uz $fpath[-1]/antidote

# Generate static file in a subshell when .zsh_plugins.txt is updated.
if [[ ! $zsh_plugins -nt ${zsh_plugins:r}.txt ]]; then
  (antidote bundle <${zsh_plugins:r}.txt >|$zsh_plugins)
fi

# Source your static plugins file.
source $zsh_plugins

#source $DOTFILES/zsh/antidote/antidote.zsh
#antidote load

# Ensure up and down arrow works for searching history
bindkey '^[[A' history-substring-search-up
bindkey '^[OA' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey '^[OB' history-substring-search-down

# Ensuring that autocomplete works with sshpass aliases
#setopt completealiases
compdef _ssh_hosts sshpass s sr
zstyle -e ':completion:*' hosts 'reply=($(< ~/.ssh/ssh_hosts))'

# Display system info https://github.com/dylanaraps/pfetch
PF_INFO="ascii title os host kernel wm editor uptime shell de palette" /usr/local/bin/pfetch 

# Sourcing k8s related stuff and prompt if using k8s
source $DOTFILES/zsh/zshenv
source $DOTFILES/zsh/functions_k8s
