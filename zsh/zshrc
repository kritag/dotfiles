#!/usr/bin/zsh
# zmodload zsh/zprof
source $HOME/.aliases.zsh
source $HOME/.env
source $HOME/.zshkeybindings.zsh #
PATH="${PATH}:$HOME/bin:$HOME/.local/bin:$HOME/.krew/bin:$HOME/.npm-global/bin"
export PATH
#
## [[ -r ~/git/znap/znap/znap.zsh ]] ||
##     git clone --depth 1 -- \
##         https://github.com/marlonrichert/zsh-snap.git ~/git/znap/znap
source ~/git/znap/znap/znap.zsh # Start Znap
znap source ohmyzsh/ohmyzsh plugins/{dirhistory,gitfast}
#znap source romkatv/powerlevel10k
znap source MichaelAquilina/zsh-you-should-use
znap source ajeetdsouza/zoxide
#znap source Freed-Wu/fzf-tab-source
znap source Aloxaf/fzf-tab
znap install zsh-users/zsh-completions
znap source zsh-users/zsh-autosuggestions
znap source zsh-users/zsh-history-substring-search
znap source zdharma-continuum/fast-syntax-highlighting
#znap source RobSis/zsh-completion-generator
#znap source jeffreytse/zsh-vi-mode

# fzf stuff
source /usr/share/fzf/key-bindings.zsh
source /usr/share/fzf/completion.zsh
#source $HOME/.cache/wal/colors-fzf.sh
source $HOME/.config/flavours/fzf.sh

# Make autocomplete work with sshpass aliases
compdef _ssh_hosts sshpass s sr
compdef _kubectl kubecolor
# # Make autocomplete work for the jctl() function
compdef _journalctl jctl
# Sourcing k8s related stuff if using k8s
#if command -v kubectl &> /dev/null
#then
#    source $HOME/.functions_k8s
#fi

eval "$(_SPYGHETTI_COMPLETE=zsh_source spyghetti)"
znap eval oh-my-posh 'oh-my-posh init zsh --config $HOME/.config/oh-my-posh/omp.yaml'
#eval "$(oh-my-posh init zsh --config $HOME/.config/oh-my-posh/omp.yaml)"
#eval "$(oh-my-posh init zsh)"
source $HOME/.zshenv.zsh
source $HOME/.zstyle.zsh
## Ensure up and down arrow works for searching history
bindkey '^[0A' history-substring-search-up
bindkey '^[0B' history-substring-search-down
# bindkey '^[[A' history-substring-search-up
# bindkey '^[[B' history-substring-search-down
zstyle ':znap:*:*' git-maintenance off
# # OMP zsh-vi-mode integration
# _omp_redraw-prompt() {
#   local precmd
#   for precmd in "${precmd_functions[@]}"; do
#     "$precmd"
#   done
#
#   zle .reset-prompt
# }
#
#
# export POSH_VI_MODE="I"
#
# function zvm_after_select_vi_mode() {
#   case $ZVM_MODE in
#   $ZVM_MODE_NORMAL)
#     POSH_VI_MODE="N"
#     ;;
#   $ZVM_MODE_INSERT)
#     POSH_VI_MODE="I"
#     ;;
#   $ZVM_MODE_VISUAL)
#     POSH_VI_MODE="V"
#     ;;
#   $ZVM_MODE_VISUAL_LINE)
#     POSH_VI_MODE="V-L"
#     ;;
#   $ZVM_MODE_REPLACE)
#     POSH_VI_MODE="R"
#     ;;
#   esac
#   _omp_redraw-prompt
# }
# Fix a bug when you C-c in CMD mode, you'd be prompted with CMD mode indicator
# while in fact you would be in INS mode.
# Fixed by catching SIGINT (C-c), set mode to INS and repropagate the SIGINT,
# so if anything else depends on it, we will not break it.
# TRAPINT() {
#   export POSH_VI_MODE="insert"
#   return $((128 + $1))
# }
# precmd() {
#   echo -ne '\e[?12h\e[?25h'
# }
znap prompt
## pnpm end
# zprof
